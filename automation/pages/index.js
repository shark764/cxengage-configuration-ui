const {Element} = require('cx-automation-utils/pageObject'); 
const elements = { 
username: new Element('[automation="username"]'), 
password: new Element('[automation="password"]'), 
signInButton: new Element('[automation="signInButton"]'), 
tenantSelect: new Element('[automation="tenantSelect"]'), 
chooseTenantButton: new Element('[automation="chooseTenantButton"]'), 
loading: new Element('[automation="loading"]'), 
dtPanelEntityDataAccessReports: new Element('[automation="dtPanelEntityDataAccessReports"]'), 
dtPanelEntityCustomMetrics: new Element('[automation="dtPanelEntityCustomMetrics"]'), 
flowsCopyFormFieldName: new Element('[automation="flowsCopyFormFieldName"]'), 
flowsCopyFormFieldDescription: new Element('[automation="flowsCopyFormFieldDescription"]'), 
flowsFormFieldName: new Element('[automation="flowsFormFieldName"]'), 
flowsFormFieldDescription: new Element('[automation="flowsFormFieldDescription"]'), 
flowsFormFieldType: new Element('[automation="flowsFormFieldType"]'), 
flowsFormFieldActiveVersion: new Element('[automation="flowsFormFieldActiveVersion"]'), 
dispatchMappingsFormFieldName: new Element('[automation="dispatchMappingsFormFieldName"]'), 
dispatchMappingsFormFieldDescription: new Element('[automation="dispatchMappingsFormFieldDescription"]'), 
dispatchMappingsFormFieldChannelType: new Element('[automation="dispatchMappingsFormFieldChannelType"]'), 
dispatchMappingsFormFieldInteractionField: new Element('[automation="dispatchMappingsFormFieldInteractionField"]'), 
dispatchMappingsFormFieldValue: new Element('[automation="dispatchMappingsFormFieldValue"]'), 
dispatchMappingsFormFieldFlowId: new Element('[automation="dispatchMappingsFormFieldFlowId"]'), 
dispatchMappingsFormFieldVersion: new Element('[automation="dispatchMappingsFormFieldVersion"]'), 
customMetricsFormFieldName: new Element('[automation="customMetricsFormFieldName"]'), 
customMetricsFormFieldDescription: new Element('[automation="customMetricsFormFieldDescription"]'), 
customMetricsFormFieldSlaThreshold: new Element('[automation="customMetricsFormFieldSlaThreshold"]'), 
customMetricsFormFieldSlaAbandonType: new Element('[automation="customMetricsFormFieldSlaAbandonType"]'), 
customMetricsFormFieldSlaAbandonThreshold: new Element('[automation="customMetricsFormFieldSlaAbandonThreshold"]'), 
usersBulkActionsFormFieldStatus: new Element('[automation="usersBulkActionsFormFieldStatus"]'), 
usersBulkActionsFormFieldInviteNow: new Element('[automation="usersBulkActionsFormFieldInviteNow"]'), 
usersBulkActionsFormFieldResendInvitation: new Element('[automation="usersBulkActionsFormFieldResendInvitation"]'), 
usersBulkActionsFormFieldCancelInvitation: new Element('[automation="usersBulkActionsFormFieldCancelInvitation"]'), 
usersBulkActionsFormFieldPasswordReset: new Element('[automation="usersBulkActionsFormFieldPasswordReset"]'), 
usersBulkActionsFormFieldNoPassword: new Element('[automation="usersBulkActionsFormFieldNoPassword"]'), 
usersBulkActionsFormFieldDefaultIdentityProvider: new Element('[automation="usersBulkActionsFormFieldDefaultIdentityProvider"]'), 
usersBulkActionsAddGroup: new Element('[automation="usersBulkActionsAddGroup"]'), 
usersBulkActionsRemoveGroup: new Element('[automation="usersBulkActionsRemoveGroup"]'), 
usersBulkActionsAddSkill: new Element('[automation="usersBulkActionsAddSkill"]'), 
usersBulkActionsRemoveSkill: new Element('[automation="usersBulkActionsRemoveSkill"]'), 
transferListsNameInput: new Element('[automation="transferListsNameInput"]'), 
transferListsDescriptionInput: new Element('[automation="transferListsDescriptionInput"]'), 

 }; 
 module.exports = elements;