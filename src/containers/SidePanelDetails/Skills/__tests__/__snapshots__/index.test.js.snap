// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Maps state to props only using selectors validates object created from mapStateToProps 1`] = `
Object {
  "defaultFilters": Object {
    "outboundIdentifierLists": Array [
      Object {
        "id": "active",
        "value": "enabled",
      },
    ],
    "users": Array [
      Object {
        "id": "status",
        "value": "accepted",
      },
      Object {
        "id": "invitationStatus",
        "value": "enabled",
      },
    ],
  },
  "itemApiPending": undefined,
  "outboundIdentifierListsFetching": undefined,
  "outboundIdentifierListsFields": Array [
    Object {
      "label": "Name",
      "name": "name",
    },
    Object {
      "label": "Description",
      "name": "description",
    },
    Object {
      "filterOptions": Array [
        "enabled",
        "disabled",
      ],
      "label": "Status",
      "name": "active",
      "type": "select",
    },
  ],
  "outboundIdentifierListsItems": Array [
    "mockListMembers",
  ],
  "sidePanelReadPermissions": Object {
    "outboundIdentifierLists": undefined,
    "users": undefined,
  },
  "sidePanelUpdatePermissions": Object {
    "outboundIdentifierLists": undefined,
    "users": undefined,
  },
  "userHasUpdatePermission": true,
  "usersFetching": undefined,
  "usersFields": Array [
    Object {
      "label": "Name",
      "name": "name",
    },
    Object {
      "label": "Email",
      "name": "email",
    },
    Object {
      "filterOptions": Array [
        "accepted",
        "pending",
        "invited",
        "disabled",
      ],
      "label": "Tenant Status",
      "name": "status",
      "type": "select",
    },
    Object {
      "filterOptions": Array [
        "pending",
        "invited",
        "expired",
        "enabled",
        "disabled",
        "sso-only",
      ],
      "label": "Platform Status",
      "name": "invitationStatus",
      "type": "select",
    },
    Object {
      "filterOptions": Array [
        "pending",
        "invited",
        "expired",
        "enabled",
        "disabled",
        "sso-only",
      ],
      "label": "Tenant Access",
      "name": "invitationStatus",
      "type": "select",
    },
    Object {
      "actions": Object {
        "onChange": [Function],
      },
      "filterable": false,
      "isColumnEditable": undefined,
      "label": "Proficiency",
      "name": "proficiency",
    },
  ],
  "usersItems": Array [
    "mockListMembers",
  ],
}
`;

exports[`SkillsDetailsPanel Renders renders 1`] = `
<SkillsDetailsPanel
  defaultFilters={
    Object {
      "outboundIdentifierLists": Array [
        Object {
          "id": "active",
          "value": "enabled",
        },
      ],
      "users": Array [
        Object {
          "id": "status",
          "value": "accepted",
        },
        Object {
          "id": "invitationStatus",
          "value": "enabled",
        },
      ],
    }
  }
  outboundIdentifierListsFields={
    Array [
      Object {
        "label": "Name",
        "name": "name",
      },
      Object {
        "label": "Description",
        "name": "description",
      },
      Object {
        "filterOptions": Array [
          "enabled",
          "disabled",
        ],
        "label": "Status",
        "name": "active",
        "type": "select",
      },
    ]
  }
  outboundIdentifierListsItems={
    Array [
      "mockListMembers",
    ]
  }
  removeListItem={[Function]}
  setSelectedSubEntityId={[Function]}
  sidePanelReadPermissions={
    Object {
      "outboundIdentifierLists": undefined,
      "users": undefined,
    }
  }
  sidePanelUpdatePermissions={
    Object {
      "outboundIdentifierLists": undefined,
      "users": undefined,
    }
  }
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
  userHasUpdatePermission={true}
  usersFields={
    Array [
      Object {
        "label": "Name",
        "name": "name",
      },
      Object {
        "label": "Email",
        "name": "email",
      },
      Object {
        "filterOptions": Array [
          "accepted",
          "pending",
          "invited",
          "disabled",
        ],
        "label": "Tenant Status",
        "name": "status",
        "type": "select",
      },
      Object {
        "filterOptions": Array [
          "pending",
          "invited",
          "expired",
          "enabled",
          "disabled",
          "sso-only",
        ],
        "label": "Platform Status",
        "name": "invitationStatus",
        "type": "select",
      },
      Object {
        "filterOptions": Array [
          "pending",
          "invited",
          "expired",
          "enabled",
          "disabled",
          "sso-only",
        ],
        "label": "Tenant Access",
        "name": "invitationStatus",
        "type": "select",
      },
      Object {
        "actions": Object {
          "onChange": [Function],
        },
        "filterable": false,
        "isColumnEditable": undefined,
        "label": "Proficiency",
        "name": "proficiency",
      },
    ]
  }
  usersItems={
    Array [
      "mockListMembers",
    ]
  }
>
  Child
</SkillsDetailsPanel>
`;
