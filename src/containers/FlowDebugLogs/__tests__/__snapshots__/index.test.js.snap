// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FlowDebugLayout Renders renders 1`] = `
<FlowDebugLogs
  fetchReportingEvents={[Function]}
  insideIframe={false}
  reportingEvents={
    Object {
      "eventId": "id",
      "eventName": "event",
    }
  }
  reportingEventsRawData="mock-string-data"
  reportingEventsString="mock-string-data"
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;

exports[`Maps state to props only using selectors validates object created from mapStateToProps 1`] = `
Object {
  "insideIframe": false,
  "reportingEvents": Object {
    "eventId": "id",
    "eventName": "event",
  },
  "reportingEventsRawData": "mock-string-data",
  "reportingEventsString": "mock-string-data",
}
`;
