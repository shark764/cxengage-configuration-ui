// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Maps state to props only using selectors validates object created from mapStateToProps 1`] = `
Object {
  "availableIdentifiers": undefined,
  "inherited": true,
  "initialValueFieldVal": "mock value",
  "initialValues": Immutable.Map {
    "dataType": "text",
    "active": true,
  },
  "isCreatingNewAtrribute": false,
  "isSaving": true,
  "key": "mock Id",
  "userHasUpdatePermission": true,
}
`;

exports[`createFormName returns proper values 1`] = `undefined`;

exports[`customAttributes Renders renders 1`] = `
<Connect(ReduxForm)
  dispatch={[Function]}
  inherited={true}
  initialValueFieldVal="mock value"
  initialValues={
    Immutable.Map {
      "dataType": "text",
      "active": true,
    }
  }
  isCreatingNewAtrribute={false}
  isSaving={true}
  key="mock Id"
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
  userHasUpdatePermission={true}
>
  Child
</Connect(ReduxForm)>
`;

exports[`formSubmission returns proper values 1`] = `
Object {
  "dirty": true,
  "type": "FORM_SUBMIT",
  "values": Object {
    "dataType": "text",
    "defaultValue": 200,
    "description": "mockDescription",
    "historical": true,
    "identifier": "mockId",
    "initialValue": 100,
    "name": "mockName",
    "realtime": true,
  },
}
`;
