// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DispatchMappings Renders renders 1`] = `
<Connect(ReduxForm)
  dispatch={[Function]}
  flowIds={
    Array [
      "mockId1",
      "mockId2",
    ]
  }
  integrationElements={
    Array [
      "mockId1",
      "mockId2",
    ]
  }
  isSaving={true}
  key="mockId"
  mappingValue="source"
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
  userHasUpdatePermission={true}
>
  Child
</Connect(ReduxForm)>
`;

exports[`Maps state to props only using selectors validates object created from mapStateToProps 1`] = `
Object {
  "allDispatchMappings": undefined,
  "dispatchValues": undefined,
  "flowIds": Array [
    "mockId1",
    "mockId2",
  ],
  "inherited": undefined,
  "initialValues": undefined,
  "integrationElements": Array [
    "mockId1",
    "mockId2",
  ],
  "isSaving": true,
  "key": "mockId",
  "mappingValue": "source",
  "selectVersionsForSelectedFlow": undefined,
  "userHasUpdatePermission": true,
}
`;

exports[`createFormName returns proper values 1`] = `undefined`;

exports[`formSubmission returns proper values 1`] = `undefined`;
