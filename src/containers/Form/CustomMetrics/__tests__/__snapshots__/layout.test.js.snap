// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CustomMetricsForm /> renders create customMetric 1`] = `
<form
  onSubmit={[Function]}
>
  <DetailHeader
    text="Details"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      disabled={false}
      inputType="text"
      label="Name *"
      name="name"
    />
    <InputField
      componentType="textarea"
      disabled={false}
      inputType="text"
      label="Description"
      name="description"
    />
  </React.Fragment>
  <DetailHeader
    text="Properties"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      dataType="number"
      disabled={false}
      inputType="text"
      label="SLA Threshold"
      name="slaThreshold"
    />
    <RadioGroupField
      disabled={false}
      label="SLA Abandon Type"
      name="slaAbandonType"
      options={
        Array [
          Object {
            "helpText": "(Include short abandons against/in SLA)",
            "label": "Ignore Abandons",
            "value": "ignored-abandoned-calls",
          },
          Object {
            "helpText": "(Filter Out / Exclude Short Abandons)",
            "label": "Count Against SLA",
            "value": "count-against-sla",
          },
        ]
      }
      required={true}
    />
    <InputField
      componentType="input"
      dataType="number"
      disabled={false}
      inputType="text"
      label="Abandon Threshold"
      name="slaAbandonThreshold"
    />
  </React.Fragment>
</form>
`;

exports[`<CustomMetricsForm /> renders update customMetric 1`] = `
<form
  onSubmit={[Function]}
>
  <DetailHeader
    text="Details"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      disabled={false}
      inputType="text"
      label="Name *"
      name="name"
    />
    <InputField
      componentType="textarea"
      disabled={false}
      inputType="text"
      label="Description"
      name="description"
    />
  </React.Fragment>
  <DetailHeader
    text="Properties"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      dataType="number"
      disabled={false}
      inputType="text"
      label="SLA Threshold"
      name="slaThreshold"
    />
    <RadioGroupField
      disabled={false}
      label="SLA Abandon Type"
      name="slaAbandonType"
      options={
        Array [
          Object {
            "helpText": "(Include short abandons against/in SLA)",
            "label": "Ignore Abandons",
            "value": "ignored-abandoned-calls",
          },
          Object {
            "helpText": "(Filter Out / Exclude Short Abandons)",
            "label": "Count Against SLA",
            "value": "count-against-sla",
          },
        ]
      }
      required={true}
    />
    <InputField
      componentType="input"
      dataType="number"
      disabled={false}
      inputType="text"
      label="Abandon Threshold"
      name="slaAbandonThreshold"
    />
  </React.Fragment>
</form>
`;

exports[`<CustomMetricsForm /> renders update customMetric saving and inherited with count-against-sla type 1`] = `
<form
  onSubmit={[Function]}
>
  <DetailHeader
    text="Details"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      disabled={true}
      inputType="text"
      label="Name *"
      name="name"
    />
    <InputField
      componentType="textarea"
      disabled={true}
      inputType="text"
      label="Description"
      name="description"
    />
  </React.Fragment>
  <DetailHeader
    text="Properties"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      dataType="number"
      disabled={true}
      inputType="text"
      label="SLA Threshold"
      name="slaThreshold"
    />
    <RadioGroupField
      disabled={true}
      label="SLA Abandon Type"
      name="slaAbandonType"
      options={
        Array [
          Object {
            "helpText": "(Include short abandons against/in SLA)",
            "label": "Ignore Abandons",
            "value": "ignored-abandoned-calls",
          },
          Object {
            "helpText": "(Filter Out / Exclude Short Abandons)",
            "label": "Count Against SLA",
            "value": "count-against-sla",
          },
        ]
      }
      required={true}
    />
  </React.Fragment>
</form>
`;

exports[`<CustomMetricsForm /> renders update customMetric saving and inherited with ignored-abandoned-calls type 1`] = `
<form
  onSubmit={[Function]}
>
  <DetailHeader
    text="Details"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      disabled={true}
      inputType="text"
      label="Name *"
      name="name"
    />
    <InputField
      componentType="textarea"
      disabled={true}
      inputType="text"
      label="Description"
      name="description"
    />
  </React.Fragment>
  <DetailHeader
    text="Properties"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      dataType="number"
      disabled={true}
      inputType="text"
      label="SLA Threshold"
      name="slaThreshold"
    />
    <RadioGroupField
      disabled={true}
      label="SLA Abandon Type"
      name="slaAbandonType"
      options={
        Array [
          Object {
            "helpText": "(Include short abandons against/in SLA)",
            "label": "Ignore Abandons",
            "value": "ignored-abandoned-calls",
          },
          Object {
            "helpText": "(Filter Out / Exclude Short Abandons)",
            "label": "Count Against SLA",
            "value": "count-against-sla",
          },
        ]
      }
      required={true}
    />
    <InputField
      componentType="input"
      dataType="number"
      disabled={true}
      inputType="text"
      label="Abandon Threshold"
      name="slaAbandonThreshold"
    />
  </React.Fragment>
</form>
`;

exports[`<CustomMetricsForm /> renders update customMetric with count-against-sla type 1`] = `
<form
  onSubmit={[Function]}
>
  <DetailHeader
    text="Details"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      disabled={false}
      inputType="text"
      label="Name *"
      name="name"
    />
    <InputField
      componentType="textarea"
      disabled={false}
      inputType="text"
      label="Description"
      name="description"
    />
  </React.Fragment>
  <DetailHeader
    text="Properties"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      dataType="number"
      disabled={false}
      inputType="text"
      label="SLA Threshold"
      name="slaThreshold"
    />
    <RadioGroupField
      disabled={false}
      label="SLA Abandon Type"
      name="slaAbandonType"
      options={
        Array [
          Object {
            "helpText": "(Include short abandons against/in SLA)",
            "label": "Ignore Abandons",
            "value": "ignored-abandoned-calls",
          },
          Object {
            "helpText": "(Filter Out / Exclude Short Abandons)",
            "label": "Count Against SLA",
            "value": "count-against-sla",
          },
        ]
      }
      required={true}
    />
  </React.Fragment>
</form>
`;

exports[`<CustomMetricsForm /> renders update customMetric with ignored-abandoned-calls type 1`] = `
<form
  onSubmit={[Function]}
>
  <DetailHeader
    text="Details"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      disabled={false}
      inputType="text"
      label="Name *"
      name="name"
    />
    <InputField
      componentType="textarea"
      disabled={false}
      inputType="text"
      label="Description"
      name="description"
    />
  </React.Fragment>
  <DetailHeader
    text="Properties"
  />
  <React.Fragment>
    <InputField
      componentType="input"
      dataType="number"
      disabled={false}
      inputType="text"
      label="SLA Threshold"
      name="slaThreshold"
    />
    <RadioGroupField
      disabled={false}
      label="SLA Abandon Type"
      name="slaAbandonType"
      options={
        Array [
          Object {
            "helpText": "(Include short abandons against/in SLA)",
            "label": "Ignore Abandons",
            "value": "ignored-abandoned-calls",
          },
          Object {
            "helpText": "(Filter Out / Exclude Short Abandons)",
            "label": "Count Against SLA",
            "value": "count-against-sla",
          },
        ]
      }
      required={true}
    />
    <InputField
      componentType="input"
      dataType="number"
      disabled={false}
      inputType="text"
      label="Abandon Threshold"
      name="slaAbandonThreshold"
    />
  </React.Fragment>
</form>
`;
