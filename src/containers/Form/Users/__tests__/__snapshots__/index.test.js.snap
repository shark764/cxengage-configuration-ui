// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Maps state to props only using selectors validates object created from mapStateToProps 1`] = `
Object {
  "capacityRules": undefined,
  "currentAgentId": "0000-0000-0000-0000",
  "displayResetPassword": undefined,
  "inherited": false,
  "initialValues": Object {
    "active": true,
  },
  "isSaving": undefined,
  "isUserPlatformAdmin": undefined,
  "key": "mockId",
  "platformRoles": Array [],
  "status": undefined,
  "tenantIdentityProviders": Array [],
  "tenantRoles": Array [],
  "userHasUpdatePermission": true,
}
`;

exports[`Users Renders renders 1`] = `
<Connect(ReduxForm)
  changeUserInviteStatus={[Function]}
  currentAgentId="0000-0000-0000-0000"
  inherited={false}
  initialValues={
    Object {
      "active": true,
    }
  }
  key="mockId"
  platformRoles={Array []}
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
  tenantIdentityProviders={Array []}
  tenantRoles={Array []}
  userHasUpdatePermission={true}
>
  Child
</Connect(ReduxForm)>
`;
