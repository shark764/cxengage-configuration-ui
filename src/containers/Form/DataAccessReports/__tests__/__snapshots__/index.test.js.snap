// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataAccessReports Renders renders 1`] = `
<Connect(ReduxForm)
  dashboards={
    Array [
      Object {
        "name": "mockName",
      },
    ]
  }
  dispatch={[Function]}
  folders={
    Array [
      Object {
        "name": "mockName",
      },
    ]
  }
  inherited={false}
  initialValues={
    Object {
      "active": true,
    }
  }
  isSaving={true}
  key="mockId"
  reportType="realtime"
  standardReports={
    Array [
      "Agent Details",
      "Agent State",
      "Interactions Dashboard",
      "Interactions Completed",
      "Interactions in Conversation",
      "Interactions in Queue",
      "Interactions in IVR",
      "Overview Dashboard",
      "Queues Dashboard",
      "Queue Details",
      "Resources Dashboard",
    ]
  }
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
  userHasUpdatePermission={true}
>
  Child
</Connect(ReduxForm)>
`;

exports[`Maps state to props only using selectors validates object created from mapStateToProps 1`] = `
Object {
  "dashboards": Array [
    Object {
      "name": "mockName",
    },
  ],
  "folders": Array [
    Object {
      "name": "mockName",
    },
  ],
  "inherited": false,
  "initialValues": Object {
    "active": true,
  },
  "isSaving": true,
  "key": "mockId",
  "realtimeReportType": undefined,
  "reportType": "realtime",
  "standardReports": Array [
    "Agent Details",
    "Agent State",
    "Interactions Dashboard",
    "Interactions Completed",
    "Interactions in Conversation",
    "Interactions in Queue",
    "Interactions in IVR",
    "Overview Dashboard",
    "Queues Dashboard",
    "Queue Details",
    "Resources Dashboard",
  ],
  "userHasUpdatePermission": true,
}
`;
