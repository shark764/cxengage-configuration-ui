// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChatWidgets Renders renders 1`] = `
<Connect(ReduxForm)
  app="mock-app"
  chatWidgetId="mock-selected-entity-id"
  digitalChannelsAppIds="mock-app-ids"
  digitalChannelsAppsFetching="mock-entity-is-fetching"
  disabled="mock-is-saving"
  dispatch={[Function]}
  displayStyleIsButton="mock-is-button"
  initialValues="mock-initial-values"
  key="mock-selected-entity-id"
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
>
  Child
</Connect(ReduxForm)>
`;

exports[`Maps state to props only using selectors validates object created from mapStateToProps 1`] = `
Object {
  "app": "mock-app",
  "chatWidgetId": "mock-selected-entity-id",
  "digitalChannelsAppIds": "mock-app-ids",
  "digitalChannelsAppsFetching": "mock-entity-is-fetching",
  "disabled": "mock-is-saving",
  "displayStyleIsButton": "mock-is-button",
  "initialValues": "mock-initial-values",
  "key": "mock-selected-entity-id",
}
`;
