// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BULK_ENTITY_UPDATE_FULFILLED updates state when bulk remove group is performed on the users page 1`] = `
Immutable.Map {
  "users": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "id": "mockUserId",
        "groups": Immutable.List [
          Immutable.Map {
            "id": "mockGroupId2",
            "name": "mockGroup2",
          },
        ],
      },
    ],
  },
}
`;

exports[`BULK_ENTITY_UPDATE_FULFILLED updates state when bulk remove skill is performed on the users page 1`] = `
Immutable.Map {
  "users": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "id": "mockUserId",
        "skills": Immutable.List [
          Immutable.Map {
            "id": "mockSkillId2",
            "name": "mockSkill2",
          },
        ],
      },
    ],
  },
}
`;

exports[`CREATE_ENTITY sets creating to true on the entity that was passed in 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": undefined,
    "creating": true,
  },
}
`;

exports[`CREATE_ENTITY_FULFILLED add the created entity into the data on said entity 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "mockData": Immutable.Map {},
      },
    ],
    "creating": false,
  },
}
`;

exports[`CREATE_ENTITY_REJECTED calls setEntityUpdatingHelper correctly 1`] = `[MockFunction]`;

exports[`entities reducer CREATE_SUB_ENTITY sets subEntitySaving true on the current sub entity 1`] = `
Immutable.Map {
  "currentEntity": "none",
  "mockEntity": Immutable.Map {
    "subEntitySaving": true,
  },
}
`;

exports[`entities reducer CREATE_SUB_ENTITY_FULFILLED add new subentiy into entities data 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "id": "mockId",
      },
    ],
  },
}
`;

exports[`entities reducer CREATE_SUB_ENTITY_FULFILLED main entity doesnt exist in state , return unchanged state 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [],
  },
}
`;

exports[`entities reducer FETCH_DATA_FULFILLED sets the data as the immutable value passed in 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "mockEntityId": "mock entity id",
      },
    ],
  },
}
`;

exports[`entities reducer FETCH_DATA_ITEM_FULFILLED data item doesn't exists in entity , it gets added because currentEntity it's userProfile and entity being fetched it's an user 1`] = `
Immutable.Map {
  "currentEntity": "userProfile",
  "users": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "0": Immutable.Map {
          "userId": "mock entity id",
        },
      },
    ],
  },
}
`;

exports[`entities reducer FETCH_DATA_ITEM_FULFILLED data item doesn't exists in entity , return unchanged state if currentEntity it's not userProfile and entity being fetched it's users or currentEntity it's users and entity being fetched it's tenants 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [],
  },
}
`;

exports[`entities reducer FETCH_DATA_ITEM_FULFILLED data item exists in entity , make sure it updates 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "id": "mockId",
        "0": Immutable.Map {
          "mockEntityId": "mock entity id",
        },
        "updating": false,
      },
    ],
  },
}
`;

exports[`entities reducer FETCH_DATA_ITEM_REJECTED calls setEntityUpdatingHelper correctly 1`] = `[MockFunction]`;

exports[`entities reducer FETCH_DATA_REJECTED sets the data to an empty List 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [],
  },
}
`;

exports[`entities reducer SET_CONFIRMATION_DIALOG sets the confirmation dialog 1`] = `
Immutable.Map {
  "currentEntity": "mockEntity",
  "mockEntity": Immutable.Map {
    "confirmationDialogType": "mockModalType",
    "confirmationDialogMetaData": "mockModalMetaData",
  },
}
`;

exports[`entities reducer SET_CURRENT_ENTITY sets the current entity 1`] = `
Immutable.Map {
  "currentEntity": "mock current entity",
}
`;

exports[`entities reducer SET_ENTITY_UPDATING calls setEntityUpdatingHelper correctly 1`] = `[MockFunction]`;

exports[`entities reducer SET_SELECTED_ENTITY_ID with setSelectedEntityCreate() sets the current entity's selected entity id to "create" 1`] = `
Immutable.Map {
  "currentEntity": "mockEntity",
  "mockEntity": Immutable.Map {
    "selectedEntityId": "create",
  },
}
`;

exports[`entities reducer SET_SELECTED_ENTITY_ID with setSelectedEntityId() sets the current entity's selected entity id 1`] = `
Immutable.Map {
  "currentEntity": "mockEntity",
  "mockEntity": Immutable.Map {
    "selectedEntityId": "mock entity id",
    "data": Immutable.List [],
  },
}
`;

exports[`entities reducer SET_SELECTED_ENTITY_ID with unsetSelectedEntityId() sets the current entity's selected entity id to "" 1`] = `
Immutable.Map {
  "currentEntity": "mockEntity",
  "mockEntity": Immutable.Map {
    "selectedEntityId": "",
    "data": Immutable.List [],
  },
}
`;

exports[`entities reducer SET_SELECTED_SUB_ENTITY_ID sets the current selected sub entity id 1`] = `
Immutable.Map {
  "currentEntity": "none",
  "none": Immutable.Map {
    "selectedSubEntityId": "mockId",
  },
}
`;

exports[`entities reducer TOGGLE_ENTITY_FULFILLED when the entity is present merges the result in and sets "updating" to false 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "id": "mock entity id",
        "mockResult": "mock result value",
        "updating": false,
      },
    ],
  },
}
`;

exports[`entities reducer UPDATE_ENTITY calls setEntityUpdatingHelper correctly 1`] = `[MockFunction]`;

exports[`entities reducer UPDATE_ENTITY_FULFILLED when the entity is present merges the result in and sets "updating" to false 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "id": "mock entity id",
        "mockResult": "mock result value",
        "updating": false,
      },
    ],
  },
}
`;

exports[`entities reducer UPDATE_ENTITY_REJECTED calls setEntityUpdatingHelper correctly 1`] = `[MockFunction]`;

exports[`entities reducer UPDATE_SUB_ENTITY sets subEntitySaving true on the current sub entity 1`] = `
Immutable.Map {
  "currentEntity": "none",
  "mockEntity": Immutable.Map {
    "subEntitySaving": true,
  },
}
`;

exports[`entities reducer UPLOAD_CSV_REJECTED calls setEntityUpdatingHelper correctly 1`] = `[MockFunction]`;

exports[`entities reducer helper functions setEntityUpdatingHelper when the entity is present sets the entity's updated field 1`] = `
Immutable.Map {
  "mockEntity": Immutable.Map {
    "data": Immutable.List [
      Immutable.Map {
        "id": "mock entity id",
        "updating": true,
      },
    ],
  },
}
`;

exports[`entities reducer returns the correct initial state 1`] = `
Immutable.Map {
  "skills": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 650,
    "confirmationDialogType": undefined,
    "metaData": Immutable.Map {
      "listDependency": "users",
    },
    "readPermission": Immutable.List [
      "VIEW_ALL_SKILLS",
    ],
    "updatePermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "MANAGE_ALL_SKILLS",
      "MANAGE_ALL_USER_SKILLS",
      "MANAGE_TENANT_ENROLLMENT",
    ],
    "createPermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "MANAGE_ALL_SKILLS",
      "MANAGE_ALL_USER_SKILLS",
      "MANAGE_TENANT_ENROLLMENT",
    ],
  },
  "queues": Immutable.Map {
    "readPermission": Immutable.List [
      "VIEW_ALL_QUEUES",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_QUEUES",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "MANAGE_ALL_QUEUES",
    ],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_QUEUES",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 750,
    "assignPermission": Immutable.List [
      "MANAGE_ALL_QUEUES",
    ],
  },
  "permissions": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "VIEW_ALL_ROLES",
    ],
    "updatePermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "PLATFORM_CREATE_TENANT_ROLES",
      "VIEW_ALL_ROLES",
      "MANAGE_ALL_ROLES",
      "MANAGE_TENANT_ENROLLMENT",
    ],
  },
  "identityProviders": Immutable.Map {
    "readPermission": Immutable.List [
      "IDENTITY_PROVIDERS_CREATE",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "IDENTITY_PROVIDERS_CREATE",
    ],
    "sharePermission": Immutable.List [],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [],
    "updatePermission": Immutable.List [
      "IDENTITY_PROVIDERS_UPDATE",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "deletePermission": Immutable.List [
      "IDENTITY_PROVIDERS_DELETE",
    ],
  },
  "whatsappApps": Immutable.Map {
    "data": Immutable.List [],
  },
  "media": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "VIEW_ALL_MEDIA",
      "PLATFORM_VIEW_ALL",
    ],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_MEDIA",
      "PLATFORM_VIEW_ALL",
    ],
    "createPermission": Immutable.List [
      "MANAGE_ALL_MEDIA",
      "PLATFORM_VIEW_ALL",
    ],
    "disablePermission": Immutable.List [
      "MANAGE_ALL_MEDIA",
      "PLATFORM_VIEW_ALL",
    ],
  },
  "flows": Immutable.Map {
    "readPermission": Immutable.List [
      "VIEW_ALL_FLOWS",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_FLOWS",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "MANAGE_ALL_FLOWS",
    ],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_FLOWS",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 600,
    "assignPermission": Immutable.List [
      "MANAGE_ALL_FLOWS",
    ],
  },
  "facebookIntegrations": Immutable.Map {
    "readPermission": Immutable.List [
      "FACEBOOK_INTEGRATIONS_APP_READ",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "FACEBOOK_INTEGRATIONS_APP_UPDATE",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "FACEBOOK_INTEGRATIONS_APP_UPDATE",
    ],
    "updatePermission": Immutable.List [
      "FACEBOOK_INTEGRATIONS_APP_UPDATE",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "assignPermission": Immutable.List [],
  },
  "historicalReportFolders": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
  },
  "users": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 600,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "VIEW_ALL_USERS",
      "PLATFORM_VIEW_ALL_USERS",
      "CONFIG_USERS_VIEW",
      "PLATFORM_CONFIG_USERS_VIEW",
    ],
    "updatePermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "MANAGE_ALL_USER_EXTENSIONS",
      "MANAGE_ALL_GROUP_USERS",
      "MANAGE_ALL_USER_SKILLS",
      "MANAGE_ALL_USER_LOCATIONS",
      "MANAGE_TENANT_ENROLLMENT",
    ],
    "createPermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "MANAGE_ALL_USER_EXTENSIONS",
      "MANAGE_ALL_GROUP_USERS",
      "MANAGE_ALL_USER_SKILLS",
      "MANAGE_ALL_USER_LOCATIONS",
      "MANAGE_TENANT_ENROLLMENT",
    ],
  },
  "customAttributes": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "INTERACTION_ATTRIBUTES_CONFIG_READ",
      "PLATFORM_VIEW_ALL",
    ],
    "createPermission": Immutable.List [
      "INTERACTION_ATTRIBUTES_CONFIG_CREATE",
      "PLATFORM_MANAGE_ALL_INTERACTION_ATTRIBUTES",
    ],
    "updatePermission": Immutable.List [
      "INTERACTION_ATTRIBUTES_CONFIG_UPDATE",
      "PLATFORM_MANAGE_ALL_INTERACTION_ATTRIBUTES",
    ],
  },
  "tenants": Immutable.Map {
    "readPermission": Immutable.List [
      "PLATFORM_VIEW_ALL_TENANTS",
      "PLATFORM_MANAGE_ALL_TENANTS",
      "PLATFORM_CREATE_ALL_TENANTS",
      "PLATFORM_CREATE_TENANT_ROLES",
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "MANAGE_TENANT",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "CREATE_CHILD_TENANT",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "MANAGE_TENANT",
      "PLATFORM_MANAGE_ALL_TENANTS",
    ],
    "updatePermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS",
      "MANAGE_TENANT",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "assignPermission": Immutable.List [],
  },
  "contactLayouts": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "CONTACTS_LAYOUTS_READ",
    ],
    "updatePermission": Immutable.List [
      "CONTACTS_LAYOUTS_UPDATE",
    ],
    "createPermission": Immutable.List [
      "CONTACTS_LAYOUTS_CREATE",
    ],
  },
  "platformRoles": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
  },
  "transferLists": Immutable.Map {
    "readPermission": Immutable.List [
      "VIEW_ALL_TRANSFER_LISTS",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_TRANSFER_LISTS",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "MANAGE_ALL_TRANSFER_LISTS",
    ],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_TRANSFER_LISTS",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "assignPermission": Immutable.List [
      "MANAGE_ALL_TRANSFER_LISTS",
    ],
  },
  "slas": Immutable.Map {
    "readPermission": Immutable.List [
      "CUSTOM_STATS_READ",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "CUSTOM_STATS_CREATE",
    ],
    "sharePermission": Immutable.List [
      "CUSTOM_STATS_UPDATE",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [],
    "updatePermission": Immutable.List [
      "CUSTOM_STATS_UPDATE",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 650,
    "assignPermission": Immutable.List [],
  },
  "businessHoursV2": Immutable.Map {
    "subEntity": "drafts",
    "readPermission": Immutable.List [
      "VIEW_ALL_BUSINESS_HOURS",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_BUSINESS_HOURS",
    ],
    "sharePermission": Immutable.List [
      "MANAGE_ALL_BUSINESS_HOURS",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "MANAGE_ALL_BUSINESS_HOURS",
    ],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_BUSINESS_HOURS",
    ],
    "selectedEntityId": "",
  },
  "apiKeys": Immutable.Map {
    "readPermission": Immutable.List [
      "MANAGE_ALL_APP_CREDENTIALS",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_APP_CREDENTIALS",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_APP_CREDENTIALS",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "assignPermission": Immutable.List [],
  },
  "reasons": Immutable.Map {
    "readPermission": Immutable.List [
      "READ_PRESENCE_REASONS",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "CREATE_PRESENCE_REASONS",
    ],
    "sharePermission": Immutable.List [
      "SHARE_PRESENCE_REASONS",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "UPDATE_PRESENCE_REASONS",
    ],
    "updatePermission": Immutable.List [
      "UPDATE_PRESENCE_REASONS",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
  },
  "businessHours": Immutable.Map {
    "readPermission": Immutable.List [
      "VIEW_ALL_BUSINESS_HOURS",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_BUSINESS_HOURS",
    ],
    "sharePermission": Immutable.List [
      "MANAGE_ALL_BUSINESS_HOURS",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "MANAGE_ALL_BUSINESS_HOURS",
    ],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_BUSINESS_HOURS",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
  },
  "flowDebugger": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
  },
  "dataAccessReports": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 600,
    "confirmationDialogType": undefined,
    "metaData": Immutable.Map {
      "listDependency": "users",
    },
    "readPermission": Immutable.List [
      "CUSTOM_STATS_READ",
    ],
    "updatePermission": Immutable.List [
      "CUSTOM_STATS_UPDATE",
    ],
    "createPermission": Immutable.List [
      "CUSTOM_STATS_CREATE",
    ],
  },
  "reasonLists": Immutable.Map {
    "readPermission": Immutable.List [
      "READ_REASON_LIST",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "CREATE_REASON_LIST",
    ],
    "sharePermission": Immutable.List [
      "UPDATE_REASON_LIST",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "UPDATE_REASON_LIST",
    ],
    "updatePermission": Immutable.List [
      "UPDATE_REASON_LIST",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
  },
  "whatsappIntegrations": Immutable.Map {
    "readPermission": Immutable.List [
      "WHATSAPP_INTEGRATIONS_APP_READ",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "WHATSAPP_INTEGRATIONS_APP_UPDATE",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "WHATSAPP_INTEGRATIONS_APP_UPDATE",
    ],
    "updatePermission": Immutable.List [
      "WHATSAPP_INTEGRATIONS_APP_UPDATE",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "assignPermission": Immutable.List [],
  },
  "messageTemplates": Immutable.Map {
    "readPermission": Immutable.List [
      "VIEW_ALL_MESSAGE_TEMPLATES",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_MESSAGE_TEMPLATES",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "MANAGE_ALL_MESSAGE_TEMPLATES",
    ],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_MESSAGE_TEMPLATES",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 650,
    "assignPermission": Immutable.List [
      "MANAGE_ALL_MESSAGE_TEMPLATES",
    ],
  },
  "groups": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "metaData": Immutable.Map {
      "listDependency": "users",
    },
    "readPermission": Immutable.List [
      "VIEW_ALL_GROUPS",
    ],
    "updatePermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "MANAGE_ALL_GROUPS",
      "MANAGE_ALL_GROUP_USERS",
      "MANAGE_ALL_GROUP_OWNERS",
      "MANAGE_TENANT_ENROLLMENT",
    ],
    "createPermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "MANAGE_ALL_GROUPS",
      "MANAGE_ALL_GROUP_USERS",
      "MANAGE_ALL_GROUP_OWNERS",
      "MANAGE_TENANT_ENROLLMENT",
    ],
  },
  "agentStateMonitoring": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "MANAGE_ALL_USER_STATE",
      "MANAGE_ALL_USERS_DIRECTION",
    ],
  },
  "lists": Immutable.Map {
    "selectedSubEntityId": undefined,
    "subEntity": "listItems",
    "readPermission": Immutable.List [
      "VIEW_ALL_LISTS",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_LISTS",
    ],
    "confirmationDialogType": undefined,
    "updatePermission": Immutable.List [
      "MANAGE_ALL_LISTS",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 600,
    "subEntitySaving": false,
  },
  "chatWidgets": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "WEB_INTEGRATIONS_APP_READ",
    ],
    "updatePermission": Immutable.List [
      "WEB_INTEGRATIONS_APP_UPDATE",
    ],
    "createPermission": Immutable.List [
      "WEB_INTEGRATIONS_APP_UPDATE",
    ],
  },
  "contactAttributes": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "CONTACTS_ATTRIBUTES_READ",
    ],
    "updatePermission": Immutable.List [
      "CONTACTS_ATTRIBUTES_UPDATE",
    ],
    "createPermission": Immutable.List [
      "CONTACTS_ATTRIBUTES_CREATE",
    ],
  },
  "none": Immutable.Map {},
  "digitalChannelsApps": Immutable.Map {
    "data": Immutable.List [],
  },
  "forecastDashboards": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
  },
  "timezones": Immutable.Map {
    "data": Immutable.List [],
  },
  "outboundIdentifiers": Immutable.Map {
    "readPermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_READ",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_CREATE",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_DISABLE",
    ],
    "updatePermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_MODIFY",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "assignPermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_ASSIGN",
    ],
  },
  "interactionMonitoring": Immutable.Map {
    "readPermission": Immutable.List [
      "VIEW_ALL_MONITORED_CALLS",
    ],
  },
  "listTypes": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
  },
  "currentEntity": "none",
  "standardDashboards": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
  },
  "outboundIdentifierLists": Immutable.Map {
    "readPermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_READ",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_CREATE",
    ],
    "metaData": Immutable.Map {
      "listDependency": "outboundIdentifiers",
    },
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_DISABLE",
    ],
    "updatePermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_MODIFY",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 650,
    "assignPermission": Immutable.List [
      "OUTBOUND_IDENTIFIER_ASSIGN",
    ],
  },
  "dispositions": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "READ_DISPOSITIONS",
    ],
    "updatePermission": Immutable.List [
      "UPDATE_DISPOSITIONS",
    ],
    "createPermission": Immutable.List [
      "CREATE_DISPOSITIONS",
    ],
    "sharePermission": Immutable.List [
      "SHARE_DISPOSITIONS",
    ],
  },
  "capacityRules": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "MANAGE_ALL_CAPACITY_RULES",
    ],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_CAPACITY_RULES",
    ],
    "createPermission": Immutable.List [
      "MANAGE_ALL_CAPACITY_RULES",
    ],
  },
  "roles": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "VIEW_ALL_ROLES",
    ],
    "updatePermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "PLATFORM_CREATE_TENANT_ROLES",
      "VIEW_ALL_ROLES",
      "MANAGE_ALL_ROLES",
      "MANAGE_TENANT_ENROLLMENT",
    ],
    "createPermission": Immutable.List [
      "PLATFORM_CREATE_TENANT_ROLES",
      "MANAGE_ALL_ROLES",
    ],
    "sharePermission": Immutable.List [
      "PLATFORM_MANAGE_ALL_TENANTS_ENROLLMENT",
      "MANAGE_ALL_ROLES",
    ],
  },
  "emailTemplates": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 650,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "USER_MANAGEMENT_EMAIL_READ",
    ],
    "updatePermission": Immutable.List [
      "USER_MANAGEMENT_EMAIL_UPDATE",
      "PLATFORM_USER_MANAGEMENT_EMAIL_UPDATE",
    ],
  },
  "dispositionLists": Immutable.Map {
    "readPermission": Immutable.List [
      "READ_DISPOSITION_LIST",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "CREATE_DISPOSITION_LIST",
    ],
    "sharePermission": Immutable.List [
      "UPDATE_DISPOSITION_LIST",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [
      "",
    ],
    "updatePermission": Immutable.List [
      "UPDATE_DISPOSITION_LIST",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "assignPermission": Immutable.List [
      "",
    ],
  },
  "userProfile": Immutable.Map {
    "updatePermission": Immutable.List [
      "PLATFORM_MANAGE_USER_ACCOUNT",
    ],
  },
  "dashboards": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
  },
  "integrations": Immutable.Map {
    "readPermission": Immutable.List [
      "VIEW_ALL_PROVIDERS",
    ],
    "data": Immutable.List [],
    "createPermission": Immutable.List [
      "MANAGE_ALL_PROVIDERS",
    ],
    "confirmationDialogType": undefined,
    "disablePermission": Immutable.List [],
    "updatePermission": Immutable.List [
      "MANAGE_ALL_PROVIDERS",
    ],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "assignPermission": Immutable.List [],
  },
  "dispatchMappings": Immutable.Map {
    "data": Immutable.List [],
    "selectedEntityId": "",
    "sidePanelWidth": 550,
    "confirmationDialogType": undefined,
    "readPermission": Immutable.List [
      "VIEW_ALL_CONTACT_POINTS",
    ],
    "updatePermission": Immutable.List [
      "MAP_ALL_CONTACT_POINTS",
    ],
    "createPermission": Immutable.List [
      "MAP_ALL_CONTACT_POINTS",
    ],
    "disablePermission": Immutable.List [
      "MAP_ALL_CONTACT_POINTS",
    ],
  },
  "regions": Immutable.Map {
    "data": Immutable.List [],
  },
}
`;
